import type { Prisma, Task, User } from "@prisma/client";
import { faker, prismaClient } from "./seed";

export async function createTasks() {
  console.info("\n📝 Seeding tasks...");
  const data: Prisma.TaskCreateInput[] = [
    // Algebra
    {
      id: "cldiog5kk000008l29k73fx8g",
      title: "Oppgave 1a",
      description:
        "En liten seilbåt har et trekantet seil med et areal på 9 m². Høyden på seilet er 6 meter. Formelen for arealet til en trekant er math(A=\\frac{gh}{2}). Hva er formelen for grunnlinjen i denne trekanten?",
      category: { connect: { id: "cldacdi520000sbxe8eyqu26y" } },
      points: 50,
      answer: "g=\\frac{2A}{h}",
    },
    {
      id: "cldioiaq9000f08l27ek850k3",
      title: "Oppgave 1b",
      description:
        "En liten seilbåt har et trekantet seil med et areal på 9 m². Høyden på seilet er 6 meter. Formelen for arealet til en trekant er math(A=\\frac{gh}{2}). Bruk formelen og regn ut lengden til grunnlinjen.",
      category: { connect: { id: "cldacdi520000sbxe8eyqu26y" } },
      points: 75,
      answer: "3",
      prevTask: { connect: { id: "cldiog5kk000008l29k73fx8g" } },
    },
    {
      id: "cldudjgkh000008ig5tnn2ixf",
      title: "Oppgave 2a",
      description:
        "Anvend kunnskapen din om faktorisering når du faktoriserer uttrykkene. math(5a+20b+10c)",
      category: { connect: { id: "cldacdi520000sbxe8eyqu26y" } },
      points: 25,
      answer: "5(a+4b+2c)",
    },
    {
      id: "cldudoi2p000208igdu8ebtud",
      title: "Oppgave 2b",
      description:
        "Anvend kunnskapen din om faktorisering når du faktoriserer uttrykkene. math(2a^2 b-2ab)",
      category: { connect: { id: "cldacdi520000sbxe8eyqu26y" } },
      points: 50,
      answer: "2ab(a-1)",
      prevTask: { connect: { id: "cldudjgkh000008ig5tnn2ixf" } },
    },
    {
      id: "cldudqbi5000308ig86l16ppf",
      title: "Oppgave 2c",
      description:
        "Anvend kunnskapen din om faktorisering når du faktoriserer uttrykkene. math(2b^3 + 10b^2 - 4b)",
      category: { connect: { id: "cldacdi520000sbxe8eyqu26y" } },
      points: 75,
      answer: "2b(b^2 + 5b - 2)",
      prevTask: { connect: { id: "cldudoi2p000208igdu8ebtud" } },
    },
    {
      id: "cldudr1a2000408ig1qzaa7pm",
      title: "Oppgave 2d",
      description:
        "Anvend kunnskapen din om faktorisering når du faktoriserer uttrykkene. math(5x^3 y^2-10x^2 y+xy^2)",
      category: { connect: { id: "cldacdi520000sbxe8eyqu26y" } },
      points: 100,
      answer: "xy(5x^2 y-10x+y)",
      prevTask: { connect: { id: "cldudqbi5000308ig86l16ppf" } },
    },
    {
      id: "cldudrdaz000508ig6393dei9",
      title: "Oppgave 2e",
      description:
        "Anvend kunnskapen din om faktorisering når du faktoriserer uttrykkene. math(9x^3 y^2 + 27x^2 y^3)",
      category: { connect: { id: "cldacdi520000sbxe8eyqu26y" } },
      points: 100,
      answer: "9x^2 y^2 (x + 3y)",
      prevTask: { connect: { id: "cldudr1a2000408ig1qzaa7pm" } },
    },
    {
      id: "cldudrj6k000608igclru197t",
      title: "Oppgave 2f",
      description:
        "Anvend kunnskapen din om faktorisering når du faktoriserer uttrykkene. math(4xy^2 z+8x^2 yz + 16xyz^2)",
      category: { connect: { id: "cldacdi520000sbxe8eyqu26y" } },
      points: 125,
      answer: "4xyz(y+2x+4z)",
      prevTask: { connect: { id: "cldudrdaz000508ig6393dei9" } },
    },

    // Økonomi
    {
      id: "cldx7ix84000108juf6y64x3i",
      title: "Oppgave 1a",
      description:
        "En baker tjener 41 500 kroner i bruttolønn per måned. Bakeren betaler 35 % i skatt hver måned. Bruk gjerne regneark når du løser oppgavene. Hvor mye utgjør prosenttrekket i kroner per måned?",
      category: { connect: { id: "cldx7ez8a000008juf4sl1wdq" } },
      points: 50,
      answer: "14525",
    },
    {
      id: "cldxc2oz2000109l8bp33fmcf",
      title: "Oppgave 1b",
      description:
        "En baker tjener 41 500 kroner i bruttolønn per måned. Bakeren betaler 35 % i skatt hver måned. Bruk gjerne regneark når du løser oppgavene. Hva er bakerens nettolønn per måned?",
      category: { connect: { id: "cldx7ez8a000008juf4sl1wdq" } },
      points: 75,
      answer: "26975",
      prevTask: { connect: { id: "cldx7ix84000108juf6y64x3i" } },
    },
    {
      id: "cldx7ra2p000008mt7td7grls",
      title: "Oppgave 2a",
      description:
        "Charlotte skal på språkreise i Malaga og ønsker å veksle norske kroner til euro. Bruk tabellen til høyre for å finne vekslingskurs for ønsket valuta. Hvor mange norske kroner må hun betale for 50 €?",
      category: { connect: { id: "cldx7ez8a000008juf4sl1wdq" } },
      points: 50,
      answer: "523.52",
    },
    {
      id: "cldx7vlv2000008mmbhex1qxi",
      title: "Oppgave 2b",
      description:
        "Charlotte skal på språkreise i Malaga og ønsker å veksle norske kroner til euro. Bruk tabellen til høyre for å finne vekslingskurs for ønsket valuta. Hvor mange euro får hun for 600 norske kroner?",
      category: { connect: { id: "cldx7ez8a000008juf4sl1wdq" } },
      points: 75,
      answer: "57.30",
      prevTask: { connect: { id: "cldx7ra2p000008mt7td7grls" } },
    },

    // Likninger
    {
      id: "cldx88udv000008l49cllfn9h",
      title: "Oppgave 1a",
      description:
        "Andregradslikninger kalles også kvadratiske likninger og inneholder et ledd med math(x^2). Løs likningene ved regning: math(x^2=121)",
      category: { connect: { id: "cldacdi530002sbxeu6rgijzl" } },
      points: 50,
      answer: "x=11,x=-11",
    },
    {
      id: "cldx891wg000108l4hv703vl7",
      title: "Oppgave 1b",
      description:
        "Andregradslikninger kalles også kvadratiske likninger og inneholder et ledd med math(x^2). Løs likningene ved regning: math(x^2+23=72)",
      category: { connect: { id: "cldacdi530002sbxeu6rgijzl" } },
      points: 75,
      answer: "x=7,x=-7",
      prevTask: { connect: { id: "cldx88udv000008l49cllfn9h" } },
    },
    {
      id: "cldx899n7000208l489j16ufq",
      title: "Oppgave 1c",
      description:
        "Andregradslikninger kalles også kvadratiske likninger og inneholder et ledd med math(x^2). Løs likningene ved regning: math(x^2-16=9)",
      category: { connect: { id: "cldacdi530002sbxeu6rgijzl" } },
      points: 90,
      answer: "x=5,x=-5",
      prevTask: { connect: { id: "cldx891wg000108l4hv703vl7" } },
    },
    {
      id: "cldx89jld000308l4bautag2d",
      title: "Oppgave 1d",
      description:
        "Andregradslikninger kalles også kvadratiske likninger og inneholder et ledd med math(x^2). Løs likningene ved regning: math(2x^2=128)",
      category: { connect: { id: "cldacdi530002sbxeu6rgijzl" } },
      points: 100,
      answer: "x=8,x=-8",
      prevTask: { connect: { id: "cldx899n7000208l489j16ufq" } },
    },

    // Funksjoner
    {
      id: "cldx8ew9o000408l4fild651m",
      title: "Oppgave 1a",
      description:
        "Et håndballag fra CSK ønsker å reise til Storhamar-cup med buss. Å leie sjåfør og buss tur/retur vil koste 30 000 kr. Bussen tar maksimalt 50 passasjerer. Skriv ned funksjonsuttrykket som viser utgiftene per person.",
      category: { connect: { id: "cldacdi520001sbxekmyct9yd" } },
      points: 50,
      answer: "f(x)=\\frac{30000}{x}",
    },
    {
      id: "cldx8f46d000508l4ap9983lt",
      title: "Oppgave 1b",
      description:
        "Et håndballag fra CSK ønsker å reise til Storhamar-cup med buss. Å leie sjåfør og buss tur/retur vil koste 30 000 kr. Bussen tar maksimalt 50 passasjerer. Skriv ned funksjonsuttrykket som viser utgiftene per person. Hvor mye koster turen per person dersom 20 stykker deltar?",
      category: { connect: { id: "cldacdi520001sbxekmyct9yd" } },
      points: 75,
      answer: "1500",
      prevTask: { connect: { id: "cldx8ew9o000408l4fild651m" } },
    },
  ];

  return await prismaClient.$transaction(
    data.map((task) =>
      prismaClient.task.upsert({
        where: { id: task.id },
        create: task,
        update: task,
      })
    )
  );
}

export async function createTaskAttempts(tasks: Task[], users: User[]) {
  console.info("\n✅ Seeding task attempts...");

  const completed = new Map<[string, string], boolean>();

  const cuids = [
    "cldogid0u008c3b6kjg2uw1vg",
    "cldogid0u008d3b6kank7s9lk",
    "cldogid0u008e3b6kchb2v769",
    "cldogid0u008f3b6klc11wvgs",
    "cldogid0u008g3b6k7dnhymx0",
    "cldogid0u008h3b6krzduw3kg",
    "cldogid0u008i3b6ktayeayni",
    "cldogid0u008j3b6kvtmhe5nr",
    "cldogid0u008k3b6kkiwmnl11",
    "cldogid0u008l3b6ku2p4my55",
    "cldogid0u008m3b6kmmdh6wy4",
    "cldogid0u008n3b6kgofd8evg",
    "cldogid0u008o3b6kg6sn5js3",
    "cldogid0u008p3b6krsyusjf7",
    "cldogid0u008q3b6k6s7dnv8r",
    "cldogid0u008r3b6k2lok10yj",
    "cldogid0u008s3b6kdli7gi7f",
    "cldogid0u008t3b6kjdkzp77l",
    "cldogid0u008u3b6kvyacb95b",
    "cldogid0u008v3b6kvc2i5dmt",
    "cldogid0u008w3b6kdulsbfjy",
    "cldogid0u008x3b6k1zu8ai25",
    "cldogid0u008y3b6kie2x9d4y",
    "cldogid0u008z3b6ko9nv9ija",
    "cldogid0u00903b6kqr22n7w3",
    "cldogid0u00913b6kng0bao01",
    "cldogid0u00923b6ke9xuuyjn",
    "cldogid0u00933b6kibegh3x4",
    "cldogid0u00943b6kpu8k8g9w",
    "cldogid0u00953b6k76khd9hj",
    "cldogid0u00963b6krly53lpk",
    "cldogid0u00973b6ko3j98cec",
    "cldogid0u00983b6kfl1050q0",
    "cldogid0u00993b6kyorl1w0v",
    "cldogid0u009a3b6k7uc0wgj4",
    "cldogid0u009b3b6k0m4xysoe",
    "cldogid0u009c3b6k7blr0w0k",
    "cldogid0u009d3b6kdwdmvg9q",
    "cldogid0u009e3b6ko5ugcuuu",
    "cldogid0u009f3b6kl2jrjhm3",
    "cldogid0u009g3b6k5rn2wph8",
    "cldogid0u009h3b6kegj3yxhv",
    "cldogid0u009i3b6kw863pak0",
    "cldogid0u009j3b6k1vduxr4r",
    "cldogid0u009k3b6kdc9rxxtp",
    "cldogid0u009l3b6kev82knz6",
    "cldogid0u009m3b6k3i8bkloe",
    "cldogid0u009n3b6k45frt8t6",
    "cldogid0u009o3b6kyb3vtgre",
    "cldogid0u009p3b6kp2dctvbi",
    "cldogid0u009q3b6kkly7xjc1",
    "cldogid0u009r3b6kw142voek",
    "cldogid0u009s3b6kl66ybi0d",
    "cldogid0u009t3b6ku5vamoot",
    "cldogid0u009u3b6k4c0guvey",
    "cldogid0u009v3b6ko1yjsugt",
    "cldogid0u009w3b6kdro20035",
    "cldogid0u009x3b6k0h98rrww",
    "cldogid0u009y3b6kuuw2i6u1",
    "cldogid0u009z3b6kmt4lyxtx",
    "cldogid0u00a03b6k1mo6qg2a",
    "cldogid0u00a13b6kj501wrnd",
    "cldogid0u00a23b6kgg3nv1km",
    "cldogid0u00a33b6k06k9wdlg",
    "cldogid0u00a43b6k252g9jq7",
    "cldogid0u00a53b6kqbgfmizu",
    "cldogid0u00a63b6kt0rsu673",
    "cldogid0u00a73b6kqbail36q",
    "cldogid0u00a83b6kc4pb1wav",
    "cldogid0u00a93b6ke9k0qvh6",
    "cldogid0u00aa3b6k06eao2t6",
    "cldogid0u00ab3b6ka92cr0ou",
    "cldogid0u00ac3b6kl8nu0hkt",
    "cldogid0u00ad3b6kt20mj6ko",
    "cldogid0u00ae3b6k0dk141wf",
    "cldogid0u00af3b6k01kuxj11",
    "cldogid0u00ag3b6k6m8m1mn3",
    "cldogid0u00ah3b6k556366f0",
    "cldogid0u00ai3b6k1wjjs4oy",
    "cldogid0u00aj3b6kzgv9sgsy",
    "cldogid0u00ak3b6kgd8y86al",
    "cldogid0u00al3b6kwyjnkbls",
    "cldogid0u00am3b6k30g6780p",
    "cldogid0u00an3b6kzpked7tj",
    "cldogid0u00ao3b6kx2rs6zdk",
    "cldogid0u00ap3b6kbzl1iqyh",
    "cldogid0u00aq3b6kfkgn867n",
    "cldogid0u00ar3b6kq94e7sqw",
    "cldogid0u00as3b6kihvm0xf8",
    "cldogid0u00at3b6k37nrf2w4",
    "cldogid0u00au3b6kzxyxdfeh",
    "cldogid0u00av3b6kft51kuph",
    "cldogid0u00aw3b6k1lvbb3q9",
    "cldogid0u00ax3b6khno3e5nx",
    "cldogid0u00ay3b6kwfja9ghh",
    "cldogid0u00az3b6kq6ewqn0b",
    "cldogid0u00b03b6krhlensg5",
    "cldogid0u00b13b6kaqqkc53d",
    "cldogid0u00b23b6k1t9xhb8l",
    "cldogid0u00b33b6kaqcyxixj",
    "clduedkhe00b43b6kpbdsdr0a",
    "clduedkhe00b53b6kxz054b20",
    "clduedkhe00b63b6kocgr2zic",
    "clduedkhe00b73b6kf0s8ongn",
    "clduedkhe00b83b6kzsak93ar",
    "clduedkhe00b93b6khvo6zcgg",
    "clduedkhe00ba3b6kwgpr4b8m",
    "clduedkhe00bb3b6kuy19145x",
    "clduedkhe00bc3b6kdih0i9ld",
    "clduedkhe00bd3b6ku9lsudqv",
    "clduedkhe00be3b6kq6fxdcei",
    "clduedkhe00bf3b6koffjgg0e",
    "clduedkhe00bg3b6kpx0d84z4",
    "clduedkhe00bh3b6kyvaostqz",
    "clduedkhe00bi3b6kzg2hns8l",
    "clduedkhe00bj3b6kfnnoss0k",
    "clduedkhe00bk3b6kn0jfnmp1",
    "clduedkhe00bl3b6kky4gsylh",
    "clduedkhe00bm3b6k2nqi2w2r",
    "clduedkhe00bn3b6kakjkrr84",
    "clduedkhe00bo3b6k4dzzn1od",
    "clduedkhe00bp3b6kkefle35e",
    "clduedkhe00bq3b6kzb0s3sfh",
    "clduedkhe00br3b6kkra0jdvb",
    "clduedkhe00bs3b6kfzdqprv2",
    "clduedkhe00bt3b6k4e3lgokq",
    "clduedkhe00bu3b6k8h21133v",
    "clduedkhe00bv3b6kkpgqjels",
    "clduedkhe00bw3b6kbg43xieh",
    "clduedkhe00bx3b6k4x8m4p9g",
    "clduedkhe00by3b6k931rsmzg",
    "clduedkhe00bz3b6kvzsg0pq0",
    "clduedkhe00c03b6k2o2wn8jg",
    "clduedkhe00c13b6k25a6jo1n",
    "clduedkhe00c23b6k7g268hms",
    "clduedkhe00c33b6kn8in1fim",
    "clduedkhe00c43b6kuxbabywt",
    "clduedkhe00c53b6ki5gw98mb",
    "clduedkhe00c63b6ka27g7ihw",
    "clduedkhe00c73b6ku1alngez",
    "clduedkhe00c83b6kv60sdjf3",
    "clduedkhe00c93b6k0rkwuo36",
    "clduedkhe00ca3b6kt124j7jr",
    "clduedkhe00cb3b6k1wrj3l81",
    "clduedkhe00cc3b6khvddalaz",
    "clduedkhe00cd3b6kod2undov",
    "clduedkhe00ce3b6k0g7uhmfd",
    "clduedkhe00cf3b6kv5ajq8da",
    "clduedkhe00cg3b6k95voohrh",
    "clduedkhe00ch3b6k9wjas4k7",
    "clduedkhe00ci3b6kr2uvk50c",
    "clduedkhe00cj3b6ku9ztwof7",
    "clduedkhe00ck3b6kycox7k1i",
    "clduedkhe00cl3b6kzvz1r2qx",
    "clduedkhe00cm3b6k9qaopxq0",
    "clduedkhe00cn3b6k5kyt6ucl",
    "clduedkhe00co3b6kvzkpi82q",
    "clduedkhe00cp3b6kb1dgw5dt",
    "clduedkhe00cq3b6k2f0eus0z",
    "clduedkhe00cr3b6kcnp6ippi",
    "clduedkhe00cs3b6ka2gwejyg",
    "clduedkhe00ct3b6kouvsa38o",
    "clduedkhe00cu3b6kn87pnazk",
    "clduedkhe00cv3b6k1m0h9fxj",
    "clduedkhe00cw3b6k5tj2e7ln",
    "clduedkhe00cx3b6k2ntdlxfp",
    "clduedkhe00cy3b6kziboiic0",
    "clduedkhe00cz3b6kce2wtg4e",
    "clduedkhe00d03b6kdzjpygtg",
    "clduedkhe00d13b6kct5tgzgx",
    "clduedkhe00d23b6kovbebgc7",
    "clduedkhe00d33b6kedkokpu5",
    "clduedkhe00d43b6k0mvfw1yk",
    "clduedkhe00d53b6kqqn8l560",
    "clduedkhe00d63b6k4j8vt4ht",
    "clduedkhe00d73b6k7b60nw0h",
    "clduedkhe00d83b6kjbz2wn6a",
    "clduedkhe00d93b6ky3bclmca",
    "clduedkhe00da3b6kcdr03bjn",
    "clduedkhe00db3b6kwsozw5vm",
    "clduedkhe00dc3b6kc5vmlk0u",
    "clduedkhe00dd3b6ksdlzue1j",
    "clduedkhe00de3b6k2icw11po",
    "clduedkhe00df3b6kse6mf5vw",
    "clduedkhe00dg3b6kuifaopzq",
    "clduedkhe00dh3b6k28ez7f9x",
    "clduedkhe00di3b6kdjzuo0yh",
    "clduedkhe00dj3b6k5drzt8mv",
    "clduedkhe00dk3b6kba24wk18",
    "clduedkhe00dl3b6kyqcb8cqp",
    "clduedkhe00dm3b6kryd380at",
    "clduedkhe00dn3b6kigi6xl5l",
    "clduedkhe00do3b6kmm5lqhrs",
    "clduedkhe00dp3b6kocwu0pj5",
    "clduedkhe00dq3b6kti5pq3lr",
    "clduedkhe00dr3b6k93bf9its",
    "clduedkhe00ds3b6kp5ztg91e",
    "clduedkhe00dt3b6k9l3xhaqm",
    "clduedkhe00du3b6kb208vn5y",
    "clduedkhe00dv3b6kr3lveriq",
    "cldx7beqe00p13b6kum225s9c",
    "cldx7beqe00p23b6kbwmlyruq",
    "cldx7beqe00p33b6kxxvplhv1",
    "cldx7beqe00p43b6katmjdoa4",
    "cldx7beqe00p53b6kmqq9apeo",
    "cldx7beqe00p63b6kvjaqzit1",
    "cldx7beqe00p73b6kny2i0jql",
    "cldx7beqe00p83b6kup8ly8ty",
    "cldx7beqe00p93b6ky95rm3zu",
    "cldx7beqe00pa3b6kgisw6vdk",
    "cldx7beqe00pb3b6kf2f6vwqs",
    "cldx7beqe00pc3b6k9nbq143x",
    "cldx7beqe00pd3b6k0zc14ree",
    "cldx7beqe00pe3b6kzj55ynby",
    "cldx7beqe00pf3b6kfv08371f",
    "cldx7beqe00pg3b6kyjtq74k5",
    "cldx7beqe00ph3b6kczi9lwvy",
    "cldx7beqe00pi3b6kmgs03ucs",
    "cldx7beqe00pj3b6kdcz62h1j",
    "cldx7beqe00pk3b6k184gsz8y",
    "cldx7beqe00pl3b6kxvxs6mgl",
    "cldx7beqe00pm3b6k6fwylrk3",
    "cldx7beqf00pn3b6k3m1cu56n",
    "cldx7beqf00po3b6k52qhwq8w",
    "cldx7beqf00pp3b6kc0bou8sq",
    "cldx7beqf00pq3b6ktp7s23rd",
    "cldx7beqf00pr3b6kyc036eqw",
    "cldx7beqf00ps3b6ksqm0zngp",
    "cldx7beqf00pt3b6kw1ufg76j",
    "cldx7beqf00pu3b6ku8941ele",
    "cldx7beqf00pv3b6kohdjra0i",
    "cldx7beqf00pw3b6k136w1re5",
    "cldx7beqf00px3b6kkf54b6rb",
    "cldx7beqf00py3b6k30qubeyy",
    "cldx7beqf00pz3b6koy416vs8",
    "cldx7beqf00q03b6kpwirp427",
    "cldx7beqf00q13b6kxm22sl9t",
    "cldx7beqf00q23b6k00hew4zx",
    "cldx7beqf00q33b6kb13bs5x9",
    "cldx7beqf00q43b6kjs86p70k",
    "cldx7beqf00q53b6knilx7nt1",
    "cldx7beqf00q63b6ks9b1pijk",
    "cldx7beqf00q73b6ker4giksj",
    "cldx7beqf00q83b6kawct1vcu",
    "cldx7beqf00q93b6kyr627qz3",
    "cldx7beqf00qa3b6kys37iyr6",
    "cldx7beqf00qb3b6k7jysywea",
    "cldx7beqf00qc3b6kmy49z1zq",
    "cldx7beqf00qd3b6kx6zg9mlf",
    "cldx7beqf00qe3b6kreysdsnq",
    "cldx7beqf00qf3b6kky19678s",
    "cldx7beqf00qg3b6kyb0kyilh",
    "cldx7beqf00qh3b6k5r0bo3dr",
    "cldx7beqf00qi3b6kcyigdd6h",
    "cldx7beqf00qj3b6k5hnfl2ia",
    "cldx7beqf00qk3b6ko9oq76oe",
    "cldx7beqf00ql3b6kzkg0bmuz",
    "cldx7beqf00qm3b6k8c1ifhop",
    "cldx7beqf00qn3b6ka1eni1xx",
    "cldx7beqf00qo3b6kmet80n7n",
    "cldx7beqf00qp3b6kmpxvhfhv",
    "cldx7beqf00qq3b6kx00kr164",
    "cldx7beqf00qr3b6krq1blh24",
    "cldx7beqf00qs3b6kpalgesz9",
    "cldx7beqf00qt3b6krhrp8zaf",
    "cldx7beqf00qu3b6k869mnao4",
    "cldx7beqf00qv3b6k75mdutqd",
    "cldx7beqf00qw3b6knm2cm8vs",
    "cldx7beqf00qx3b6k88a8yb5r",
    "cldx7beqf00qy3b6kawb5c7hb",
    "cldx7beqf00qz3b6kuc9gf1oo",
    "cldx7beqf00r03b6k1z27v1o5",
    "cldx7beqf00r13b6k8vc01lhl",
    "cldx7beqf00r23b6ki51kz33j",
    "cldx7beqf00r33b6k3w1ppwv2",
    "cldx7beqf00r43b6kmwlk2758",
    "cldx7beqf00r53b6k2ehdjzci",
    "cldx7beqf00r63b6koqvafk5a",
    "cldx7beqf00r73b6k1eb8r1v4",
    "cldx7beqf00r83b6kq0uqp416",
    "cldx7beqf00r93b6km27d00xr",
    "cldx7beqf00ra3b6kd1rv2omf",
    "cldx7beqf00rb3b6kh790q6nd",
    "cldx7beqf00rc3b6km3rzn00p",
    "cldx7beqf00rd3b6kydiv4srw",
    "cldx7beqf00re3b6ka4xqgsrz",
    "cldx7beqf00rf3b6kpgrlk2cx",
    "cldx7beqf00rg3b6kyoay46sn",
    "cldx7beqf00rh3b6kpambj661",
    "cldx7beqf00ri3b6kwwwhcaui",
    "cldx7beqf00rj3b6ktya0oljj",
    "cldx7beqf00rk3b6kc1vq6iln",
    "cldx7beqf00rl3b6kmgli7d4v",
    "cldx7beqf00rm3b6kvzuht61n",
    "cldx7beqf00rn3b6k7r8j39ok",
    "cldx7beqf00ro3b6kida3itvl",
    "cldx7beqf00rp3b6kw35arnis",
    "cldx7beqf00rq3b6ks30pk1he",
    "cldx7beqf00rr3b6k3a044y4r",
    "cldx7beqf00rs3b6k3vapkeg5",
    "cldx7beqf00rt3b6k29o0yfm8",
    "cldx7beqf00ru3b6krvvn6s5n",
    "cldx7beqf00rv3b6kr2rmg4p6",
    "cldx7beqf00rw3b6k4ykqi76s",
    "cldx7beqf00rx3b6kxup1y8a3",
    "cldx7beqf00ry3b6k5ot0uhkx",
    "cldx7beqf00rz3b6knlyjk01c",
    "cldx7beqf00s03b6ke1v6vt5p",
    "cldx7beqf00s13b6k0munwl9m",
    "cldx7beqf00s23b6k41eyhf0c",
    "cldx7beqf00s33b6kwi0q8eln",
    "cldx7beqf00s43b6kg02ldzun",
    "cldx7beqf00s53b6ke3a4r79j",
    "cldx7beqf00s63b6kim66oqmp",
    "cldx7beqf00s73b6krq2jcydj",
    "cldx7beqf00s83b6kjxdoz6j9",
    "cldx7beqf00s93b6kcnjha7do",
    "cldx7beqf00sa3b6knunab8jl",
    "cldx7beqf00sb3b6kpy6xuyci",
    "cldx7beqf00sc3b6kr0t1caw3",
    "cldx7beqf00sd3b6kzxkne2m1",
    "cldx7beqf00se3b6k4tpmgvbf",
    "cldx7beqf00sf3b6ku6vrgl93",
    "cldx7beqf00sg3b6kzfi87o78",
    "cldx7beqf00sh3b6k6ze4ayjh",
    "cldx7beqf00si3b6k03e9yl46",
    "cldx7beqf00sj3b6kt885cbfv",
    "cldx7beqf00sk3b6kl3iwwcbw",
    "cldx7beqf00sl3b6ksz2ywq9p",
    "cldx7beqf00sm3b6kdfl2hqp8",
    "cldx7beqf00sn3b6kysx584ul",
    "cldx7beqf00so3b6khgg3mij3",
    "cldx7beqf00sp3b6kdm0cg80b",
    "cldx7beqf00sq3b6kjueklir0",
    "cldx7beqf00sr3b6kgluwhmg6",
    "cldx7beqf00ss3b6klcv5pfft",
    "cldx7beqf00st3b6k3kqffn2k",
    "cldx7beqf00su3b6kmvgctmwt",
    "cldx7beqf00sv3b6kq8w9dvk8",
    "cldx7beqf00sw3b6kmfokmxm2",
    "cldx7beqf00sx3b6k3zomnvaj",
    "cldx7beqf00sy3b6kfbxnuivj",
    "cldx7beqf00sz3b6ku1e7ghbm",
    "cldx7beqf00t03b6khmwqg1qe",
    "cldx7beqf00t13b6kxmiihjkn",
    "cldx7beqf00t23b6kf56r65nk",
    "cldx7beqf00t33b6ki935k2lc",
    "cldx7beqf00t43b6kcvgnbn3a",
    "cldx7beqf00t53b6knl376lb4",
    "cldx7beqf00t63b6k1dl1dtp9",
  ];

  const start = new Date(2023, 2, 4, 12);
  const end = new Date(2023, 2, 4, 15);

  let count = 0;

  const promises = cuids.map((id) => {
    const taskId = faker.helpers.arrayElement(tasks).id;
    const userId =
      count <= 10
        ? "cldacds260001sb515t861jm3"
        : faker.helpers.arrayElement(users).id;

    if (count <= 10) {
      count++;
    }

    const result = completed.get([taskId, userId])
      ? "PENDING"
      : faker.helpers.arrayElement(["FAIL", "SUCCESS", "PENDING"] as const);

    const elapsedTime = faker.datatype.number({ min: 100, max: 1000 });
    const createdAt = faker.date.between(start, end);

    if (result === "SUCCESS") {
      completed.set([taskId, userId], true);
    }

    return prismaClient.taskAttempt.upsert({
      where: { id },
      create: {
        id,
        taskId,
        userId,
        result,
        elapsedTime,
        createdAt,
      },
      update: {
        elapsedTime,
        taskId,
        userId,
        result,
        createdAt,
      },
    });
  });

  return await prismaClient.$transaction(promises);
}
