// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider          = "postgresql"
    url               = env("DATABASE_URL")
    shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

// Necessary for Next auth

model User {
    id            String        @id @default(cuid())
    name          String        @unique
    email         String?       @unique
    emailVerified DateTime?
    image         String?
    password      String
    TaskAttempt   TaskAttempt[]
}

// Fragile-flower

model Category {
    id   String @id @default(cuid())
    name String
    Task Task[]
}

model Task {
    id          String        @id @default(cuid())
    title       String
    description String
    points      Int
    category    Category      @relation(fields: [categoryId], references: [id])
    categoryId  String
    answer      String
    TaskAttempt TaskAttempt[]
    nextTaskId  String?       @unique
    nextTask    Task?         @relation("TaskOrder", fields: [nextTaskId], references: [id])
    prevTask    Task?         @relation("TaskOrder")
}

enum AttemptResult {
    PENDING
    SUCCESS
    FAIL
}

model TaskAttempt {
    id          String        @id @default(cuid())
    user        User          @relation(fields: [userId], references: [id])
    userId      String
    task        Task          @relation(fields: [taskId], references: [id])
    taskId      String
    result      AttemptResult @default(PENDING)
    createdAt   DateTime      @default(now())
    elapsedTime Int           @default(0)
}

enum AchievementColor {
    GREEN
    BLUE
    RED
    PINK
    YELLOW
    PURPLE
    GRAY
    LIGHTGRAY
    ORANGE
}

model Achievement {
    id          String           @id @default(cuid())
    icon        String
    title       String
    description String
    color       AchievementColor @default(PINK)
    requirement Int
}
